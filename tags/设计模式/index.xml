<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>设计模式 on 毛珑珑的博客</title><link>https://maolonglong.tech/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link><description>Recent content in 设计模式 on 毛珑珑的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Sat, 03 Jul 2021 14:45:56 +0800</lastBuildDate><atom:link href="https://maolonglong.tech/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/index.xml" rel="self" type="application/rss+xml"/><item><title>Go 函数选项模式（Functional Options）</title><link>https://maolonglong.tech/post/golang/functional-options/</link><pubDate>Sat, 03 Jul 2021 14:45:56 +0800</pubDate><guid>https://maolonglong.tech/post/golang/functional-options/</guid><description>在 Python 中经常可以看到这样的代码： 1 2 3 4 5 6 7 def sub(x=3, y=1): return x - y print(sub(3, 1)) print(sub(y=1, x=3)) print(sub()) 函数可以设置参数默认值。并且调用时，能指定名称以自由调换参数位置。 go 中显然没有这样的语法糖，但是我们能通过函数选项模式实现类似的功能。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39</description></item></channel></rss>