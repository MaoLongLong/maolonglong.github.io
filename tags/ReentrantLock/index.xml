<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ReentrantLock on 毛珑珑的博客</title><link>https://maolonglong.tech/tags/ReentrantLock/</link><description>Recent content in ReentrantLock on 毛珑珑的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 24 Nov 2020 21:19:39 +0800</lastBuildDate><atom:link href="https://maolonglong.tech/tags/ReentrantLock/index.xml" rel="self" type="application/rss+xml"/><item><title>【Java 并发】重入锁（ReentrantLock）</title><link>https://maolonglong.tech/post/java/reentrant-lock/</link><pubDate>Tue, 24 Nov 2020 21:19:39 +0800</pubDate><guid>https://maolonglong.tech/post/java/reentrant-lock/</guid><description>什么是“重入” Re-Entrant-Lock 翻译成重入锁也是非常贴切的。之所以这么叫，那是因为这种锁是可以反复进入的。当然，这里的反复仅仅局限于一个线程，观察下面的代码， f1 锁住 lock 之后， f2 依然能继续获取到 lock 并执行，因为它们都属于主线程。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 public class Main { static class Test</description></item></channel></rss>