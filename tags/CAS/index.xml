<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CAS on 毛珑珑的博客</title><link>https://maolonglong.tech/tags/CAS/</link><description>Recent content in CAS on 毛珑珑的博客</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 25 Jun 2021 18:31:06 +0800</lastBuildDate><atom:link href="https://maolonglong.tech/tags/CAS/index.xml" rel="self" type="application/rss+xml"/><item><title>无锁队列的简单实现</title><link>https://maolonglong.tech/post/golang/queue/</link><pubDate>Fri, 25 Jun 2021 18:31:06 +0800</pubDate><guid>https://maolonglong.tech/post/golang/queue/</guid><description>谈到无锁队列，就不得不提 Michael 和 Scott 在 1996 年发表的论文 Simple, Fast, and Practical Non-Blocking and Blocking Concurrent Queue Algorithms，Java 中 ConcurrentLinkedQueue 也是基于该论文的算法实现。 伪代码 论文中 lock-free queue 算法的伪代码： 正如论文的题目描述的，它非常简单，代码量很少。主要思路就是使用 CAS 操作队列的头指针和尾指针，以实现线程安全。 structure pointer_t {ptr: pointer to node_t, count: unsigned integer} structure</description></item></channel></rss>